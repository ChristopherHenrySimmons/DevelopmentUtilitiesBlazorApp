@page "/Commands"
@inject HttpClient Http

<h1>Commands</h1>

<button class="btn btn-success" @onclick="@GetCommands">Get Commands List</button>
<button class="btn btn-info" @onclick="@PostCommand">Create</button>

<br />

<form id="commandPost" action="/PostCommand" method="post" style="display:@togglePost;">

     <table class="table">
          <thead class="thead-dark">
               <tr>
                    <th>Id</th>
                    <th>Title</th>
                    <th>Command</th>
                    <th>ConsoleType</th>
                    <th>Action</th>
               </tr>
          </thead>

          <tbody>
               
                    <tr>
                         <td><input type="type" name="name" value="" /></td>
                         <td><input type="type" name="name" value="" /></td>
                         <td><input type="type" name="name" value="" /></td>
                         <td><input type="type" name="name" value="" /></td>
                         <td><button class="btn btn-block">Edit</button></td>
                    </tr>

          </tbody>

     </table>

</form>

<table class="table">
     <thead class="thead-dark">
          <tr>
               <th>Id</th>
               <th>Title</th>
               <th>Command</th>
               <th>ConsoleType</th>
               <th>Action</th>
          </tr>
     </thead>

     <tbody>
          @foreach (var item in @_commands)
          {
               <tr>                    
                    <td>@item.Id</td>
                    <td>@item.Tile</td>
                    <td>@item.Command</td>
                    <td>@item.ConsoleType</td>
                    <td><button class="btn btn-block">Edit</button></td>
               </tr>

          }
     </tbody>
     
</table>

@code
{
     public static string togglePost = "none";

     List<_Command> _commands = new List<_Command>();

     private async Task GetCommands()
     {
          _commands = await Http.GetJsonAsync<List<_Command>>("http://developmentutilities.eastasia.azurecontainer.io/api/v1/Commands");
     }

     public partial class _Command
     {
          public int Id { get; set; }
          public string Tile { get; set; }
          public string Command { get; set; }
          public string ConsoleType { get; set; }
     }

     private async Task PostCommand()
     {
          await Http.SendJsonAsync(HttpMethod.Post, "/api/Customer", new _Command
          {

          });
     }

     public class TogglePost
     {
          TogglePost(string togglePost)
          {
               if (togglePost == "none")
               {
                    togglePost = "block";
               }
               else
               {
                    togglePost = "none";
               }

          }
     }
}